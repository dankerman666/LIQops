{"version":3,"sources":["components/links.js","components/menus.js","components/layouts/Header.js","components/layouts/Footer.js","components/pages/pools.js","components/pages/about.js","components/pages/farming.js","assets/images/fog-logo.png","components/pages/fog.js","components/pages/index.js","App.js","reportWebVitals.js","index.js"],"names":["links","id","tolink","namelink","menus","tomenu","namemenu","Header","props","state","className","this","activeWallet","data-menu-style","map","menu","to","data","href","target","dir","Component","Fog","amount","maxStake","maxRewards","lpStaking","llpStaked","lpToStake","llpToWithdraw","rewardsToClaim","onInputChange","bind","event","setState","name","value","targetInput","targetValue","valueToMax","BigNumber","window","web3","utils","fromWei","toString","console","log","config","DECIMAL_PLACES","rewardPool","llpRewardPool","liquidLpBalance","llpYourStakeAmount","fogBal","fogBalance","fogDensityValue","fogDensity","llpRewards","llpReward","rewardPoolCalc","roundedRewardPool","printRewardPool","src","liquidLogo","alt","toFormat","onClick","preventDefault","condensate","llpRank","max","type","onChange","updateInput","toWei","stakeTokens","unstakeTokens","readOnly","claimRewards","routes","App","a","loading","liquidLpAddress","testNet","LP","kovanAddress","address","liquidLpAbi","kovanAbi","abi","liquidStakerLpAddress","LIQLP","liquidStakerLpAbi","liqLp","eth","Contract","lLpStaker","methods","approve","send","from","account","on","hash","stake","unstake","claim","fogAddress","FOG","fogAbi","fog","rewardLiquidityProviders","liquidBalance","fogLpBalance","loadWeb3","loadBlockchainData","Web3","getAccounts","accounts","net","getId","networkId","liquidLpData","liquidLp","balanceOf","call","totalSupply","alert","fogData","fogLPData","FOGLP","fogLPAddress","fogLPAbi","fogLP","fogLPBalance","liquidLPStakerData","liquidLPStakerAddress","liquidLPStakerAbi","liquidLPStaker","getReward","getStakedAmount","getStakedRank","getRewardPoolBalance","provider","providers","HttpProvider","ethereum","enable","currentProvider","content","route","idx","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1618f6bf.chunk.js","sourcesContent":["const links = [\r\n    {\r\n        id: 1,\r\n        tolink: \"https://app.uniswap.org/#/swap?inputCurrency=0x72ca0501427bb8f089c1c4f767cb17d017e803a9\",\r\n        namelink: \"Uniswap\"\r\n    },\r\n    {\r\n        id: 2,\r\n        tolink: \"https://etherscan.io/address/0x72ca0501427bb8f089c1c4f767cb17d017e803a9#code\",\r\n        namelink: \"Contract\"\r\n    },\r\n    {\r\n        id: 3,\r\n        tolink: \"https://twitter.com/TokenLiquid\",\r\n        namelink: \"Twitter\"\r\n    },\r\n    {\r\n        id: 4,\r\n        tolink: \"https://liquidtokendefi.medium.com/liquid-43dde81a4e6\",\r\n        namelink: \"Medium\"\r\n    },\r\n    {\r\n        id: 5,\r\n        tolink: \"https://t.me/LIQofficial\",\r\n        namelink: \"Telegram\"\r\n    },\r\n];\r\n\r\n\r\n\r\nexport default links ;\r\n","const menus = [\r\n    {\r\n        id: 1,\r\n        tomenu: '/',\r\n        namemenu: 'Fog'\r\n    }\r\n];\r\n\r\n\r\nexport default menus ;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport links from '../links';\r\nimport menus from '../menus';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <header id=\"header\" className=\"header header-style1\">\r\n                {!this.props.activeWallet && <button className=\"button connect-wallet\">CONNECT WALLET</button>}\r\n                <div className=\"container\">\r\n                    <div className=\"flex-header d-flex justify-content-between align-items-center\">\r\n                        <div className=\"content-menu d-lg-flex\">\r\n                            <div className=\"nav-wrap\">\r\n                                <nav id=\"mainnav\" className=\"hide-on-mobile\">\r\n                                    <ul className=\"menu ace-responsive-menu\" data-menu-style=\"horizontal\">\r\n                                        {\r\n                                            menus.map(menu => (\r\n                                                <li key={menu.id}>\r\n                                                    <Link to={menu.tomenu} className={menu.id === 1 ? \"active\" : \"\"}>\r\n                                                        {menu.namemenu}\r\n                                                    </Link>\r\n                                                </li>\r\n                                            ))\r\n                                        }\r\n                                        {\r\n                                            links.map(data => (\r\n                                                <li key={data.id}>\r\n                                                    <a href={data.tolink} target={'_blank'}>\r\n                                                        {data.namelink}\r\n\r\n                                                    </a>\r\n                                                </li>\r\n                                            ))\r\n                                        }\r\n                                    </ul>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                        <div dir=\"rtl\" className=\"btn-menu mobile-header__menu-button\">\r\n                            <div className=\"line line-1\"/>\r\n                            <div className=\"line line-2\"/>\r\n                            <div className=\"line line-3\"/>\r\n                            <div className=\"line line-4\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n// import {Link} from 'react-router-dom'\r\nclass Footer extends Component {\r\n    render() {\r\n        return (          \r\n            <footer>\r\n                <div className=\"ctr\">\r\n                    <p>0x72ca0501427bb8f089c1c4f767cb17d017e803a9</p>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, {Component} from 'react';\r\nimport {Footer, Header} from \"../layouts\";\r\n\r\nclass Pools extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <div id=\"content\">\r\n                    <div className=\"info\">\r\n                        <img className=\"logo-top\" src=\"\" alt=\"Liquid logo\"/>\r\n\r\n\r\n                        <div className=\"logo\">\r\n                            <img className=\"wordmark\" alt=\"wordmark\" src=\"img/wordmark-13.png\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"farming-pop-up\">\r\n                        <div className=\"pop-up-content\">\r\n                            <label htmlFor=\"input-farm\" className=\"pop-up-title\">FARM</label>\r\n                            <div className=\"section-label\">Amount</div>\r\n                            <div className=\"token-input\">\r\n                                <input value=\"0.000\" type=\"number\" id=\"input-farm\"/>\r\n                                <button className=\"max button\">MAX</button>\r\n                            </div>\r\n                            <button className=\"button btn-half push-5\"><a href=\"farming.html\">Approve</a></button>\r\n                            <button className=\"button btn-half\">Deposit</button>\r\n\r\n                            <div className=\"pop-up-note\">\r\n                                NOTE: You need UNI LP TOKENS for farming – <a\r\n                                href=\"https://app.uniswap.org/#/add/0x72ca0501427bb8f089c1c4f767cb17d017e803a9/ETH\"\r\n                                target=\"_blank\" rel=\"noreferrer\"> provide liquidity </a>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <section className=\"pools\" id=\"pools\">\r\n\r\n                        <div className=\"pools-info-panel\">\r\n                            <h2>POOLS WILL OPEN SOON</h2>\r\n                            <a href=\"https://app.uniswap.org/#/swap?inputCurrency=0x72ca0501427bb8f089c1c4f767cb17d017e803a9\">GET\r\n                                MORE LIQ NOW </a>\r\n                        </div>\r\n\r\n                        <div className=\"pool pool-1 is-not-farming is-closed\">\r\n\r\n                            <div className=\"pool-inner\">\r\n\r\n\r\n                                <div className=\"pool-info\">\r\n                                    <h2 className=\"pool-title\">LIQ-ETH</h2>\r\n                                    <h3 className=\"pool-title\">APY XXXX%</h3>\r\n                                    <div className=\"button-container\">\r\n                                        <button className=\"button\">Add Liquidity</button>\r\n                                        <button className=\"button btn-farm\">Farm</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"pool pool-2 is-not-farming is-closed\">\r\n\r\n                            <div className=\"pool-inner\">\r\n\r\n\r\n                                <div className=\"pool-info\">\r\n                                    <h2 className=\"pool-title\">XXX-XXX</h2>\r\n                                    <h3 className=\"pool-title\">APY XXXX%</h3>\r\n                                    <div className=\"button-container\">\r\n                                        <button className=\"button\">Add Liquidity</button>\r\n                                        <button className=\"button btn-farm\">Farm</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"pool pool-3 is-not-farming is-closed\">\r\n\r\n                            <div className=\"pool-inner\">\r\n\r\n\r\n                                <div className=\"pool-info\">\r\n                                    <h2 className=\"pool-title\">XXX-XXX</h2>\r\n                                    <h3 className=\"pool-title\">APY XXXX%</h3>\r\n                                    <div className=\"button-container\">\r\n                                        <button className=\"button\">Add Liquidity</button>\r\n                                        <button className=\"button btn-farm\">Farm</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"pool pool-4 is-not-farming is-closed\">\r\n\r\n                            <div className=\"pool-inner\">\r\n\r\n\r\n                                <div className=\"pool-info\">\r\n                                    <h2 className=\"pool-title\">ETH-LIQ</h2>\r\n                                    <h3 className=\"pool-title\">APY XXXX%</h3>\r\n                                    <div className=\"button-container\">\r\n                                        <button className=\"button\">Add Liquidity</button>\r\n                                        <button className=\"button btn-farm\">Farm</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </section>\r\n\r\n\r\n                    <div className=\"ctr\">\r\n                        <p>0x72ca0501427bb8f089c1c4f767cb17d017e803a9</p>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pools;\r\n\r\n","import React, {Component} from 'react';\r\nimport {Footer, Header} from \"../layouts\";\r\n\r\nclass About extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header></Header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;\r\n\r\n","import React, {Component} from 'react';\r\nimport {Footer, Header} from \"../layouts\";\r\n\r\nclass Farming extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header></Header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Farming;\r\n\r\n","export default __webpack_public_path__ + \"static/media/fog-logo.551cb24c.png\";","import React, {Component} from 'react';\r\nimport liquidLogo from \"../../assets/images/fog-logo.png\";\r\nimport BigNumber from \"bignumber.js\";\r\n\r\nclass Fog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n    }\r\n\r\n    state = {\r\n        amount: 0,\r\n        maxStake: 0,\r\n        maxRewards: 0,\r\n        lpStaking: 0,\r\n        llpStaked: 0,\r\n        lpToStake: 0,\r\n        llpToWithdraw: 0,\r\n        rewardsToClaim: 0,\r\n\r\n    }\r\n\r\n    onInputChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    updateInput(event, targetInput, targetValue) {\r\n        let valueToMax = new BigNumber(window.web3.utils.fromWei(this.props[targetValue].toString(), 'ether'), 10);\r\n        //valueToMax = valueToMax.toFormat(3);\r\n        console.log(targetInput, this.state[targetInput], valueToMax);\r\n        this.setState({\r\n            [targetInput]: valueToMax\r\n        });\r\n        this.onInputChange(event)\r\n    }\r\n\r\n\r\n    render() {\r\n        BigNumber.config({DECIMAL_PLACES: 3})\r\n\r\n        let rewardPool = window.web3.utils.fromWei(this.props.llpRewardPool.toString(), 'ether');\r\n        let liquidLpBalance = new BigNumber(window.web3.utils.fromWei(this.props.liquidLpBalance.toString(), 'ether'), 10);\r\n        let llpStaked = new BigNumber(window.web3.utils.fromWei(this.props.llpYourStakeAmount.toString(), 'ether'), 10);\r\n        let fogBal = new BigNumber(window.web3.utils.fromWei(this.props.fogBalance.toString(), 'ether'), 10);\r\n        let fogDensityValue = new BigNumber(window.web3.utils.fromWei(this.props.fogDensity.toString(), 'ether'), 10);\r\n        let llpRewards = new BigNumber(window.web3.utils.fromWei(this.props.llpReward.toString(), \"ether\"), 10);\r\n\r\n        let rewardPoolCalc = (rewardPool > 90000) ? rewardPool - 90000 : 90000 - rewardPool;\r\n        let roundedRewardPool = new BigNumber(rewardPoolCalc);\r\n        let printRewardPool = new BigNumber(rewardPool);\r\n\r\n        return (\r\n\r\n            <div>\r\n                <div id=\"fog-container\">\r\n                    <div className=\"info\">\r\n                        <img className=\"logo-top logo-top-smaller\" src={liquidLogo} alt=\"FOG logo\"/>\r\n                    </div>\r\n\r\n                    <section className=\"pools\" id=\"pools\">\r\n\r\n                        <h2 className=\"shadow-text\">FOG</h2>\r\n\r\n                        <div className=\"pool is-farming fog\">\r\n                            <div className=\"pool-inner\">\r\n                                <div className=\"pool-info\">\r\n                                    <div className=\"condensate\">\r\n                                        <div className=\"condensate-panel\">\r\n                                            <img className=\"condensate-logo\" src={liquidLogo} alt=\"Liquid logo\"/>\r\n                                            <div className=\"condensate-label\">\r\n                                                Claimable LP Rewards\r\n                                            </div>\r\n                                            <div className=\"condensate-info\">\r\n                                                {fogDensityValue.toFormat(3)} LIQ-ETH UNI LP\r\n                                            </div>\r\n                                            <button className=\"condensate-button button\"\r\n                                            onClick={event => {\r\n                                                event.preventDefault();\r\n                                                this.props.condensate()\r\n                                            }}\r\n                                            >CONDENSATE</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div id=\"pool-stats\">\r\n                                        <h3 id=\"stats-1\" className=\"shadow-text\">STATS</h3>\r\n                                        <div className=\"stats-inner\">\r\n\r\n                                            <div className=\"stats-panel\">\r\n                                                <div className=\"stats-label\">\r\n                                                    Your LIQ UNIV2 Balance\r\n                                                </div>\r\n                                                <div className=\"stats-info\">\r\n                                                    {liquidLpBalance.toFormat(2)}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"stats-panel\">\r\n                                                <div className=\"stats-label\">\r\n                                                    Your total stake\r\n                                                </div>\r\n                                                <div className=\"stats-info\">\r\n                                                    {llpStaked.toFormat(2)} LIQ UNIV2\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"stats-panel\">\r\n                                                <div className=\"stats-label\">\r\n                                                    Your FOG Balance\r\n                                                </div>\r\n                                                <div className=\"stats-info\">\r\n                                                    {fogBal.toFormat(3)}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"stats-panel\">\r\n                                                <div className=\"stats-label\">\r\n                                                    Pending FOG Rewards\r\n                                                </div>\r\n                                                <div className=\"stats-info\">\r\n                                                    {llpRewards.toFormat(3)}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"stats-panel\">\r\n                                                <div className=\"stats-label\">\r\n                                                    Total FOG Rewarded\r\n                                                </div>\r\n                                                <div className=\"stats-info\">\r\n                                                    {roundedRewardPool.toFormat(3)}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"stats-panel\">\r\n                                                <div className=\"stats-label\">\r\n                                                    FOG Rewards Remaining\r\n                                                </div>\r\n                                                <div className=\"stats-info\">\r\n                                                    {printRewardPool.toFormat(3)}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"stats-panel rank\">\r\n                                                <div className=\"stats-label\">\r\n                                                    Rank\r\n                                                </div>\r\n                                                <div className=\"stats-info\">\r\n                                                    {this.props.llpRank.toString()}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"deposit-withdraw\">\r\n                                        <h3  className=\"shadow-text\">DEPOSIT/WITHDRAW</h3>\r\n\r\n                                        <div id=\"pool-w-d\">\r\n                                            <div className=\"lp-tokens lp-deposit\">\r\n                                                <div className=\"section-label\">Deposit LIQ/ETH LP TOKENS</div>\r\n                                                <div className=\"token-input\">\r\n                                                    <input\r\n                                                        max={liquidLpBalance}\r\n                                                        value={this.state.lpStaking}\r\n                                                        type=\"number\" id=\"lpStaking\" name=\"lpStaking\"\r\n                                                        onChange={event =>\r\n                                                            this.onInputChange(event)\r\n                                                        }\r\n                                                    />\r\n                                                    <button className=\"max button\"\r\n                                                            onClick={(event) => {\r\n                                                                event.preventDefault();\r\n                                                                const targetValue = 'liquidLpBalance';\r\n                                                                const targetInput = 'lpStaking';\r\n                                                                this.updateInput(event, targetInput, targetValue);\r\n                                                            }}\r\n                                                    >MAX\r\n                                                    </button>\r\n                                                </div>\r\n                                                <button className=\"button btn-full\"\r\n                                                        onClick={(event) => {\r\n                                                            event.preventDefault();\r\n                                                            let amount;\r\n                                                            amount = this.state.lpStaking.toString();\r\n                                                            amount = window.web3.utils.toWei(amount, \"Ether\");\r\n                                                            this.props.stakeTokens(amount);\r\n                                                        }}\r\n\r\n                                                >Deposit\r\n                                                </button>\r\n                                            </div>\r\n\r\n                                            <div className=\"lp-tokens lp-withdraw\">\r\n                                                <div className=\"section-label\">Withdraw LIQ/ETH LP TOKENS</div>\r\n                                                <div className=\"token-input\">\r\n                                                    <input\r\n                                                        max={llpStaked}\r\n                                                        value={this.state.llpStaked}\r\n                                                        type=\"number\" id=\"llpStaked\" name=\"llpStaked\"\r\n                                                        onChange={event =>\r\n                                                            this.onInputChange(event)\r\n                                                        }\r\n                                                    />\r\n                                                    <button className=\"max button\"\r\n                                                            onClick={(event) => {\r\n                                                                event.preventDefault();\r\n                                                                const targetValue = 'llpYourStakeAmount';\r\n                                                                const targetInput = 'llpStaked';\r\n                                                                this.updateInput(event, targetInput, targetValue);\r\n                                                            }}\r\n                                                    >MAX\r\n                                                    </button>\r\n                                                </div>\r\n\r\n                                                <button className=\"button btn-full\"\r\n                                                        onClick={(event) => {\r\n                                                            event.preventDefault();\r\n                                                            let amount;\r\n                                                            amount = this.state.llpStaked.toString();\r\n                                                            amount = window.web3.utils.toWei(amount, \"Ether\");\r\n                                                            this.props.unstakeTokens(amount);\r\n                                                        }}\r\n                                                >Withdraw\r\n                                                </button>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"rewards\">\r\n                                                <div className=\"section-label\">REWARDS</div>\r\n                                                <div className=\"token-input\">\r\n                                                    <input readOnly={true} value={llpRewards}\r\n                                                           type=\"number\" id=\"llpRewards\" name=\"maxRewards\"/>\r\n                                                    <button className=\"max button\"\r\n                                                            onClick={(event) => {\r\n                                                                this.props.claimRewards()\r\n                                                            }}\r\n                                                    >Claim\r\n                                                    </button>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default Fog;\r\n","import Pools from \"./pools\";\r\nimport About from \"./about\";\r\nimport Farming from \"./farming\";\r\nimport Fog from \"./fog\";\r\n\r\nconst routes = [\r\n    // { path: \"/\", component: Fog},\r\n    // { path: \"/pools\", component: Pools},\r\n    // { path: \"/about\", component: About},\r\n    // { path: \"/farming\", component: Farming},\r\n    // { path: \"/fog\", component: Fog},\r\n]\r\n\r\nexport default routes;","/*so the front end/basic logic for this is pretty much done...\r\n  the only thing missing is that the rewards are yielded manually by running \"truffle exec scripts/issue-tokens.js\" in the console.\r\n  besides that, it's pretty much good to go! just need to add a few things for actual HATE/RI staking functionality...\r\n  TD:\r\n    --PRIORITY LEVEL 1--\r\n    *change variables/mock contracts around and switch them out with HATE/RI LP token (for farming)\r\n    *create FATE token and have that be the token rewarded instead of the Mock DAPP token\r\n      *(FATE needs to be \"whitelisted\" i.e. not tradable on open market)\r\n    *make it so that rewards are yielded upon every block/a concurrent basis instead of manually through the console\r\n    *change the STAKE button to be able to...\r\n       *(instead of both calling the APPROVE and STAKE functions in the same sweep),\r\n        *have the APPROVE function exist on it's own separate button\r\n    --PRIORITIY LEVEL 2--\r\n    *create NFT UI/setup where you can purchase these NFTs with liq\r\n*/\r\nimport { Route, BrowserRouter } from 'react-router-dom'\r\nimport routes from './components/pages/index'\r\nimport Web3 from \"web3\";\r\nimport React, { Component } from \"react\";\r\nimport Liquid from \"./abis/liquid.json\";\r\nimport LP from \"./abis/liq-eth.json\";\r\nimport LIQLP from \"./abis/liquidStaker.json\";\r\nimport FOG from \"./abis/fog.json\";\r\nimport FOGLP from \"./abis/fog-eth.json\";\r\nimport { Header } from \"./components/layouts\";\r\nimport Fog from \"./components/pages/fog\";\r\n\r\nclass App extends Component {\r\n\r\n    //Connect Web 3\r\n    async componentWillMount() {\r\n        await this.loadWeb3();\r\n        await this.loadBlockchainData();\r\n        const amount = Web3.utils.toWei('1', 'ether')\r\n        // this.stakeTokens(amount)\r\n        // this.unstakeTokens(amount)\r\n\r\n    }\r\n\r\n    async loadBlockchainData() {\r\n        const web3 = window.web3;\r\n        const accounts = await web3.eth.getAccounts();\r\n        this.setState({\r\n            account: accounts[0],\r\n        });\r\n\r\n        console.log(\"Accounts: \", accounts);\r\n        const networkId = await web3.eth.net.getId();\r\n        console.log(\"network ID: \", networkId, (networkId !== 1));\r\n        // kovan === 42\r\n        // mainnet === 1\r\n\r\n        const testNet = (networkId !== 1);\r\n        this.setState({\r\n            testNet: testNet,\r\n        });\r\n        //Liquid\r\n\r\n        // const liqData = Liquid;\r\n        // if (liqData) {\r\n        //     const liquidAddress = (testNet) ? liqData.kovanAddress : liqData.address;\r\n        //     const liquid = new web3.eth.Contract(Liquid.abi, liquidAddress);\r\n        //     this.setState({liquid});\r\n        //     let liquidBalance = await liquid.methods.balanceOf(this.state.account).call();\r\n        //     //console.log(liquidBalance);\r\n        //     this.setState({\r\n        //         liquidBalance: await liquid.methods.balanceOf(this.state.account).call()\r\n        //     });\r\n        //     console.log(\"Liquid Balance: \", web3.utils.fromWei(liquidBalance, 'ether').toString());\r\n        // } else {\r\n        //     window.alert(\"Liquid contract not deployed to network\");\r\n        // }\r\n\r\n        //LP\r\n        const liquidLpData = LP;\r\n        if (liquidLpData) {\r\n            const liquidLpAddress = (testNet) ? liquidLpData.kovanAddress : liquidLpData.address;\r\n            const liquidLpAbi = (testNet) ? liquidLpData.kovanAbi : liquidLpData.abi;\r\n            const liquidLp = new web3.eth.Contract(liquidLpAbi, liquidLpAddress);\r\n            this.setState({ liquidLp });\r\n            //lp Balance\r\n            let liquidLpBalance = await liquidLp.methods.balanceOf(this.state.account).call();\r\n            let totalSupply = await liquidLp.methods.totalSupply().call();\r\n            this.setState({\r\n                liquidLpBalance: liquidLpBalance\r\n            });\r\n\r\n            console.log(\"LP Balance: \", web3.utils.fromWei(liquidLpBalance, 'ether').toString());\r\n        } else {\r\n            window.alert(\"LP contract not deployed to network\");\r\n        }\r\n\r\n        //fog\r\n        const fogData = FOG;\r\n        if (fogData) {\r\n            const fogAddress = (testNet) ? fogData.kovanAddress : fogData.address;\r\n            const fogAbi = (testNet) ? fogData.kovanAbi : fogData.abi;\r\n            const fog = new web3.eth.Contract(fogAbi, fogAddress);\r\n            this.setState({ fog });\r\n            //fog Balance\r\n            let fogBalance = await fog.methods.balanceOf(this.state.account).call();\r\n            let fogDensity = await fog.methods.fogDensity().call();\r\n            console.log('fogDensity: '+fogDensity)\r\n            this.setState({\r\n                fogBalance: fogBalance,\r\n                fogDensity: fogDensity\r\n            });\r\n            console.log(\"FOG Balance: \", web3.utils.fromWei(fogBalance, 'ether').toString());\r\n        } else {\r\n            window.alert(\"FOG contract not deployed to network\");\r\n        }\r\n\r\n        const fogLPData = FOGLP;\r\n        if (fogLPData) {\r\n            const fogLPAddress = (testNet) ? fogLPData.kovanAddress : fogLPData.address;\r\n            const fogLPAbi = (testNet) ? fogLPData.kovanAbi : fogLPData.abi;\r\n            const fogLP = new web3.eth.Contract(fogLPAbi, fogLPAddress);\r\n            this.setState({ fogLP });\r\n            //fog Balance\r\n            let fogLPBalance = await fogLP.methods.balanceOf(this.state.account).call();\r\n            this.setState({\r\n                fogLPBalance: fogLPBalance\r\n            });\r\n            console.log(\"fogLPBalance Balance: \", web3.utils.fromWei(fogLPBalance, 'ether').toString());\r\n\r\n        } else {\r\n            window.alert(\"fogLP contract not deployed to network\");\r\n        }\r\n\r\n        const liquidLPStakerData = LIQLP;\r\n        if (liquidLPStakerData) {\r\n            const liquidLPStakerAddress = (testNet) ? liquidLPStakerData.kovanAddress : liquidLPStakerData.address;\r\n            const liquidLPStakerAbi = (testNet) ? liquidLPStakerData.kovanAbi : liquidLPStakerData.abi;\r\n            const liquidLPStaker = new web3.eth.Contract(liquidLPStakerAbi, liquidLPStakerAddress);\r\n            this.setState({ liquidLPStaker });\r\n            //fog Balance\r\n            let llpReward = await liquidLPStaker.methods.getReward(this.state.account).call();\r\n            let llpYourStakeAmount = await liquidLPStaker.methods.getStakedAmount(this.state.account).call();\r\n            let llpRank = await liquidLPStaker.methods.getStakedRank(this.state.account).call();\r\n            let llpRewardPool = await liquidLPStaker.methods.getRewardPoolBalance().call();\r\n            this.setState({\r\n                llpReward: llpReward,\r\n                llpYourStakeAmount: llpYourStakeAmount,\r\n                llpRank: llpRank,\r\n                llpRewardPool: llpRewardPool\r\n            });\r\n\r\n        } else {\r\n            window.alert(\"liquidLPStaker contract not deployed to network\");\r\n        }\r\n\r\n        this.setState({\r\n            loading: false,\r\n        });\r\n    }\r\n\r\n    // load wallet\r\n    async loadWeb3() {\r\n        const testnetURL = 'https://kovan.infura.io/v3/8f0acb84a9af45cbb0213b971e6bd364';\r\n        const provider = (this.state.testNet) ? new Web3.providers.HttpProvider(testnetURL) : window.ethereum;\r\n        // set dev or live env:\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(provider);\r\n            await window.ethereum.enable();\r\n            this.setState({\r\n                activeWallet: true\r\n            })\r\n        } else if (window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider);\r\n            this.setState({\r\n                activeWallet: true\r\n            })\r\n        } else {\r\n            window.alert(\r\n                \"Non Ethereum browser detected. You should consider installing metamask!\"\r\n            );\r\n        }\r\n    }\r\n\r\n    stakeTokens = async (amount) => {\r\n        this.setState({ loading: true });\r\n        const web3 = window.web3;\r\n\r\n        const liquidLpAddress = (this.state.testNet) ? LP.kovanAddress : LP.address;\r\n        const liquidLpAbi = (this.state.testNet) ? LP.kovanAbi : LP.abi;\r\n\r\n        const liquidStakerLpAddress = (this.state.testNet) ? LIQLP.kovanAddress : LIQLP.address;\r\n        const liquidStakerLpAbi = (this.state.testNet) ? LIQLP.kovanAbi : LIQLP.abi;\r\n\r\n        const liqLp = new web3.eth.Contract(liquidLpAbi, liquidLpAddress);\r\n        const lLpStaker = new web3.eth.Contract(liquidStakerLpAbi, liquidStakerLpAddress);\r\n\r\n        try {\r\n            // Approve\r\n            console.log(amount);\r\n            //liqLp is 0x7A\r\n            await liqLp.methods.approve(liquidStakerLpAddress, amount)\r\n                .send({ from: this.state.account })\r\n                .on(\"transactionHash\", async (hash) => {\r\n                    // Stake\r\n                    //lLpStaker is 0xD0\r\n                    await lLpStaker.methods.stake(amount)\r\n                        .send({ from: this.state.account })\r\n                        .on(\"transactionHash\", (hash) => {\r\n                            this.setState({ loading: false });\r\n                        })\r\n                });\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    unstakeTokens = async (amount) => {\r\n        this.setState({ loading: true });\r\n        const web3 = window.web3;\r\n\r\n        const liquidStakerLpAddress = (this.state.testNet) ? LIQLP.kovanAddress : LIQLP.address;\r\n        const liquidStakerLpAbi = (this.state.testNet) ? LIQLP.kovanAbi : LIQLP.abi;\r\n\r\n        const lLpStaker = new web3.eth.Contract(liquidStakerLpAbi, liquidStakerLpAddress);\r\n\r\n        try {\r\n            await lLpStaker.methods.unstake(amount)\r\n                .send({ from: this.state.account })\r\n                .on(\"transactionHash\", (hash) => {\r\n                    this.setState({ loading: false });\r\n                })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    claimRewards = async (amount) => {\r\n        this.setState({ loading: true });\r\n        const web3 = window.web3;\r\n\r\n        const liquidStakerLpAddress = (this.state.testNet) ? LIQLP.kovanAddress : LIQLP.address;\r\n        const liquidStakerLpAbi = (this.state.testNet) ? LIQLP.kovanAbi : LIQLP.abi;\r\n\r\n        const lLpStaker = new web3.eth.Contract(liquidStakerLpAbi, liquidStakerLpAddress);\r\n        try {\r\n            await lLpStaker.methods.claim()\r\n                .send({ from: this.state.account })\r\n                .on(\"transactionHash\", (hash) => {\r\n                    this.setState({ loading: false });\r\n                })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n    condensate = async () => {\r\n        this.setState({ loading: true });\r\n        const web3 = window.web3;\r\n\r\n        const fogAddress = (this.state.testNet) ? FOG.kovanAddress : FOG.address;\r\n        const fogAbi = (this.state.testNet) ? FOG.kovanAbi : FOG.abi;\r\n\r\n        const fog = new web3.eth.Contract(fogAbi, fogAddress);\r\n        try {\r\n            await fog.methods.rewardLiquidityProviders()\r\n                .send({ from: this.state.account })\r\n                .on(\"transactionHash\", (hash) => {\r\n                    this.setState({ loading: false });\r\n                })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            account: \"\",\r\n            amount: 0,\r\n            activeWallet: false,\r\n            loading: true,\r\n            liquidBalance: 0,\r\n            liquidLpBalance: 0,\r\n            fogBalance: 0,\r\n            fogDensity: 0,\r\n            fogLpBalance: 0,\r\n            llpReward: 0,\r\n            llpYourStakeAmount: 0,\r\n            llpRank: 0,\r\n            llpRewardPool: 0\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let content;\r\n        content = (\r\n            <div>\r\n                <Header\r\n                    activeWallet={this.state.activeWallet}\r\n                />\r\n                <Fog\r\n                    amount={this.state.amount}\r\n                    //liquidBalance={this.state.liquidBalance}\r\n                    liquidLpBalance={this.state.liquidLpBalance}\r\n                    fogBalance={this.state.fogBalance}\r\n                    fogDensity={this.state.fogDensity}\r\n                    fogLpBalance={this.state.fogLpBalance}\r\n                    llpReward={this.state.llpReward}\r\n                    llpYourStakeAmount={this.state.llpYourStakeAmount}\r\n                    llpRank={this.state.llpRank}\r\n                    llpRewardPool={this.state.llpRewardPool}\r\n                    stakeTokens={this.stakeTokens}\r\n                    unstakeTokens={this.unstakeTokens}\r\n                    claimRewards={(this.claimRewards)}\r\n                    condensate={(this.condensate)}\r\n                />\r\n            </div>\r\n        );\r\n        return (\r\n            <div>\r\n                <BrowserRouter>\r\n                    {\r\n                        routes.map((route, idx) => (\r\n                            <Route exact path={route.path} component={route.component} key={idx}></Route>\r\n                        ))\r\n                    }\r\n                </BrowserRouter>\r\n                {content}\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Web3Provider from 'web3-react';\r\n\r\n\r\nReactDOM.render(\r\n    <Web3Provider>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Web3Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}